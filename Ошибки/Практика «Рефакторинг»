using System;
using Avalonia.Media;
using Newtonsoft.Json.Linq;
using RefactorMe.Common;

namespace RefactorMe
{
    public class Draftsman
    {
        static float x, y;
        static IGraphics graphics;

        public static void Initialize ( IGraphics newGraphics)
        {
            graphics = newGraphics;
            graphics.Clear(Colors.Black);
        }

        public static void SetPosition(float x0, float y0)
        {   
            x = x0; 
            y = y0;
        }

        public static void MakeIt(Pen pen, double width, double angle)
        {
            var x1 = (float)(x + width * Math.Cos(angle));
            var y1 = (float)(y + width * Math.Sin(angle));

            graphics.DrawLine(pen, x, y, x1, y1);
            x = x1;
            y = y1;
        }

        public static void Change(double length, double angle)
        {
            x = (float)(x + length * Math.Cos(angle)); 
            y = (float)(y + length * Math.Sin(angle));
        }
    }
    
    public class ImpossibleSquare
    {
        public static void Draw(int width, int height, double rotationAngle, IGraphics graphics)
        {
            Draftsman.Initialize(graphics);

            var sz = Math.Min(width, height);

            var diagonalLength = Math.Sqrt(2) * (sz * 0.375f + sz * 0.04f) / 2;
            var x0 = (float)(diagonalLength * Math.Cos(Math.PI / 4 + Math.PI)) + width / 2f;
            var y0 = (float)(diagonalLength * Math.Sin(Math.PI / 4 + Math.PI)) + height / 2f;

            Draftsman.SetPosition(x0, y0);
            //Рисуем 1-ую сторону
            DrawSide(sz, 0);
            //Рисуем 2-ую сторону
            DrawSide(sz, -Math.PI / 2);
            //Рисуем 3-ю сторону
            DrawSide(sz, Math.PI);
            //Рисуем 4-ую сторону
            DrawSide(sz, Math.PI / 2);
        }

        public static void DrawSide(int sz, double angle)
        {
            Draftsman.MakeIt(new Pen(Brushes.Yellow), sz * 0.375f, angle);
            Draftsman.MakeIt(new Pen(Brushes.Yellow), sz * 0.04f * Math.Sqrt(2), angle + Math.PI / 4);
            Draftsman.MakeIt(new Pen(Brushes.Yellow), sz * 0.375f, angle + Math.PI);
            Draftsman.MakeIt(new Pen(Brushes.Yellow), sz * 0.375f - sz * 0.04f, angle + Math.PI / 2);

            Draftsman.Change(sz * 0.04f, angle - Math.PI);
            Draftsman.Change(sz * 0.04f * Math.Sqrt(2), angle + 3 * Math.PI / 4);
        }
    }
}
